{"ast":null,"code":"var _jsxFileName = \"/home/aidan/Documents/Development/full-stack-open/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Statistics = _ref => {\n  let {\n    good,\n    bad,\n    neutral\n  } = _ref;\n  if (good === 0 || bad === 0 || neutral === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no feedback gibbon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 61\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 56\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), \"neutral \", neutral, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 27\n      }, this), \"bad \", bad, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 19\n      }, this), \"all \", good + bad + neutral, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 36\n      }, this), \"average \", (good + bad * -1) / (good + bad + neutral), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 64\n      }, this), \"positive \", good / (good + bad + neutral) * 100, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"gib feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","Button","props","handleClick","text","Statistics","good","bad","neutral","App","setGood","setNeutral","setBad"],"sources":["/home/aidan/Documents/Development/full-stack-open/part1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\n\nconst Statistics = ({ good, bad, neutral }) => {\n  if (good === 0 || bad === 0 || neutral === 0) return <div><p>no feedback gibbon</p> </div>\n  return (\n    <div>\n      <h1>stats</h1>\n      <p>\n        good {good} <br></br>\n        neutral {neutral} <br></br>\n        bad {bad} <br></br>\n        all {good + bad + neutral} <br></br>\n        average {(good + (bad * -1)) / (good + bad + neutral)} <br></br>\n        positive {good / (good + bad + neutral) * 100} %\n      </p>\n    </div>\n  )\n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>gib feedback</h1>\n      <Button handleClick={() => setGood(good + 1)} text=\"good\" />\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"neutral\" />\n      <Button handleClick={() => setBad(bad + 1)} text=\"bad\" />\n      <Statistics good={good} bad={bad} neutral={neutral} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,iBACb;EAAQ,OAAO,EAAEA,KAAK,CAACC,WAAvB;EAAA,UACGD,KAAK,CAACE;AADT;EAAA;EAAA;EAAA;AAAA,QADF;;KAAMH,M;;AAON,MAAMI,UAAU,GAAG,QAA4B;EAAA,IAA3B;IAAEC,IAAF;IAAQC,GAAR;IAAaC;EAAb,CAA2B;EAC7C,IAAIF,IAAI,KAAK,CAAT,IAAcC,GAAG,KAAK,CAAtB,IAA2BC,OAAO,KAAK,CAA3C,EAA8C,oBAAO;IAAA,wBAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAL;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAC9C,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,oBACQF,IADR,oBACc;QAAA;QAAA;QAAA;MAAA,QADd,cAEWE,OAFX,oBAEoB;QAAA;QAAA;QAAA;MAAA,QAFpB,UAGOD,GAHP,oBAGY;QAAA;QAAA;QAAA;MAAA,QAHZ,UAIOD,IAAI,GAAGC,GAAP,GAAaC,OAJpB,oBAI6B;QAAA;QAAA;QAAA;MAAA,QAJ7B,cAKW,CAACF,IAAI,GAAIC,GAAG,GAAG,CAAC,CAAhB,KAAuBD,IAAI,GAAGC,GAAP,GAAaC,OAApC,CALX,oBAKyD;QAAA;QAAA;QAAA;MAAA,QALzD,eAMYF,IAAI,IAAIA,IAAI,GAAGC,GAAP,GAAaC,OAAjB,CAAJ,GAAgC,GAN5C;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAfD;;MAAMH,U;;AAkBN,MAAMI,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACQ,OAAD,EAAUG,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACO,GAAD,EAAMK,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,WAAW,EAAE,MAAMU,OAAO,CAACJ,IAAI,GAAG,CAAR,CAAlC;MAA8C,IAAI,EAAC;IAAnD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAQ,WAAW,EAAE,MAAMK,UAAU,CAACH,OAAO,GAAG,CAAX,CAArC;MAAoD,IAAI,EAAC;IAAzD;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,MAAD;MAAQ,WAAW,EAAE,MAAMI,MAAM,CAACL,GAAG,GAAG,CAAP,CAAjC;MAA4C,IAAI,EAAC;IAAjD;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,UAAD;MAAY,IAAI,EAAED,IAAlB;MAAwB,GAAG,EAAEC,GAA7B;MAAkC,OAAO,EAAEC;IAA3C;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAfD;;GAAMC,G;;MAAAA,G;AAiBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}