{"ast":null,"code":"var _jsxFileName = \"/home/aidan/Documents/Development/full-stack-open/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleClick = type => {\n  if (type === \"good\") setClicks({ ...clicks,\n    good: good + 1\n  });\n  if (type === \"neutral\") setClicks({ ...clicks,\n    neutral: neutral + 1\n  });\n  if (type === \"bad\") setClicks({ ...clicks,\n    bad: bad + 1\n  });\n};\n\nconst Button = _ref => {\n  let {\n    type\n  } = _ref;\n\n  /*#__PURE__*/\n  _jsxDEV(\"button\", {\n    onClick: handleClick(type),\n    children: type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","handleClick","type","setClicks","clicks","good","neutral","bad","Button","App","setGood","setNeutral","setBad"],"sources":["/home/aidan/Documents/Development/full-stack-open/part1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst handleClick = (type) => {\n  if (type === \"good\") setClicks({...clicks, good: good + 1})\n  if (type === \"neutral\") setClicks({...clicks, neutral: neutral + 1})\n  if (type === \"bad\") setClicks({...clicks, bad: bad + 1})\n}\n\nconst Button = ({ type }) => {\n  <button onClick={handleClick(type)}>\n    {type}\n  </button>\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  \n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button type=\"good\" />\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,IAAD,IAAU;EAC5B,IAAIA,IAAI,KAAK,MAAb,EAAqBC,SAAS,CAAC,EAAC,GAAGC,MAAJ;IAAYC,IAAI,EAAEA,IAAI,GAAG;EAAzB,CAAD,CAAT;EACrB,IAAIH,IAAI,KAAK,SAAb,EAAwBC,SAAS,CAAC,EAAC,GAAGC,MAAJ;IAAYE,OAAO,EAAEA,OAAO,GAAG;EAA/B,CAAD,CAAT;EACxB,IAAIJ,IAAI,KAAK,KAAb,EAAoBC,SAAS,CAAC,EAAC,GAAGC,MAAJ;IAAYG,GAAG,EAAEA,GAAG,GAAG;EAAvB,CAAD,CAAT;AACrB,CAJD;;AAMA,MAAMC,MAAM,GAAG,QAAc;EAAA,IAAb;IAAEN;EAAF,CAAa;;EAC3B;EAAA;IAAQ,OAAO,EAAED,WAAW,CAACC,IAAD,CAA5B;IAAA,UACGA;EADH;IAAA;IAAA;IAAA;EAAA;AAGD,CAJD;;KAAMM,M;;AAMN,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACM,OAAD,EAAUK,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACO,GAAD,EAAMK,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;EAGA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,IAAI,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAbD;;GAAMS,G;;MAAAA,G;AAeN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}